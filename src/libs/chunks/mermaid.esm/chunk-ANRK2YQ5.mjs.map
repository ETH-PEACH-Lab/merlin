{
  "version": 3,
  "sources": ["../../../../parser/dist/mermaid-parser.core.mjs"],
  "sourcesContent": ["import {\n  InfoModule,\n  createInfoServices\n} from \"./chunks/mermaid-parser.core/chunk-RKCOPBUU.mjs\";\nimport {\n  PacketModule,\n  createPacketServices\n} from \"./chunks/mermaid-parser.core/chunk-U74XUBA7.mjs\";\nimport {\n  PieModule,\n  createPieServices\n} from \"./chunks/mermaid-parser.core/chunk-MOE7KQSU.mjs\";\nimport {\n  ArrayModule,\n  createArrayServices\n} from \"./chunks/mermaid-parser.core/chunk-H5TPIRN7.mjs\";\nimport {\n  VisualDiagramModule,\n  createVisualDiagramServices\n} from \"./chunks/mermaid-parser.core/chunk-L54YCITT.mjs\";\nimport {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  ArrayDiagram,\n  ArrayDiagramGeneratedModule,\n  CommonTokenBuilder,\n  CommonValueConverter,\n  Info,\n  InfoGeneratedModule,\n  MatrixDiagram,\n  MermaidGeneratedSharedModule,\n  Packet,\n  PacketBlock,\n  PacketGeneratedModule,\n  Pie,\n  PieGeneratedModule,\n  PieSection,\n  TestSlidesDiagram,\n  VisSlidesDiagram,\n  VisualDiagram,\n  __name,\n  isArrayDiagram,\n  isCommon,\n  isInfo,\n  isPacket,\n  isPacketBlock,\n  isPie,\n  isPieSection\n} from \"./chunks/mermaid-parser.core/chunk-TNKVC7VU.mjs\";\n\n// src/parse.ts\nvar parsers = {};\nvar initializers = {\n  info: async () => {\n    const { createInfoServices: createInfoServices2 } = await import(\"./chunks/mermaid-parser.core/info-HPGN4TUB.mjs\");\n    const parser = createInfoServices2().Info.parser.LangiumParser;\n    parsers[\"info\"] = parser;\n  },\n  packet: async () => {\n    const { createPacketServices: createPacketServices2 } = await import(\"./chunks/mermaid-parser.core/packet-6KKYWX2P.mjs\");\n    const parser = createPacketServices2().Packet.parser.LangiumParser;\n    parsers[\"packet\"] = parser;\n  },\n  pie: async () => {\n    const { createPieServices: createPieServices2 } = await import(\"./chunks/mermaid-parser.core/pie-BLXMKTT6.mjs\");\n    const parser = createPieServices2().Pie.parser.LangiumParser;\n    parsers[\"pie\"] = parser;\n  },\n  array: async () => {\n    const { createArrayServices: createArrayServices2 } = await import(\"./chunks/mermaid-parser.core/array-EP5SWZ4K.mjs\");\n    const parser = createArrayServices2().Array.parser.LangiumParser;\n    parsers[\"array\"] = parser;\n  },\n  matrix: async () => {\n    const { createMatrixServices } = await import(\"./chunks/mermaid-parser.core/matrix-UZKMSDM6.mjs\");\n    const parser = createMatrixServices().Matrix.parser.LangiumParser;\n    parsers[\"matrix\"] = parser;\n  },\n  testslides: async () => {\n    const { createTestSlidesServices } = await import(\"./chunks/mermaid-parser.core/testslides-RCBYIEKC.mjs\");\n    const parser = createTestSlidesServices().TestSlides.parser.LangiumParser;\n    parsers[\"testslides\"] = parser;\n  },\n  visslides: async () => {\n    const { createVisSlidesServices } = await import(\"./chunks/mermaid-parser.core/visslides-DIJRRPJ4.mjs\");\n    const parser = createVisSlidesServices().VisSlides.parser.LangiumParser;\n    parsers[\"visslides\"] = parser;\n  },\n  visual: async () => {\n    const { createVisualDiagramServices: createVisualDiagramServices2 } = await import(\"./chunks/mermaid-parser.core/visual-ZF57RBEX.mjs\");\n    const parser = createVisualDiagramServices2().VisualDiagram.parser.LangiumParser;\n    parsers[\"visual\"] = parser;\n  }\n};\nasync function parse(diagramType, text) {\n  const initializer = initializers[diagramType];\n  if (!initializer) {\n    throw new Error(`Unknown diagram type: ${diagramType}`);\n  }\n  if (!parsers[diagramType]) {\n    await initializer();\n  }\n  const parser = parsers[diagramType];\n  const result = parser.parse(text);\n  if (result.lexerErrors.length > 0 || result.parserErrors.length > 0) {\n    throw new MermaidParseError(result);\n  }\n  return result.value;\n}\n__name(parse, \"parse\");\nvar MermaidParseError = class extends Error {\n  constructor(result) {\n    const lexerErrors = result.lexerErrors.map((err) => err.message).join(\"\\n\");\n    const parserErrors = result.parserErrors.map((err) => err.message).join(\"\\n\");\n    super(`Parsing failed: ${lexerErrors} ${parserErrors}`);\n    this.result = result;\n  }\n  static {\n    __name(this, \"MermaidParseError\");\n  }\n};\nexport {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  ArrayDiagram,\n  ArrayDiagramGeneratedModule,\n  ArrayModule,\n  CommonTokenBuilder,\n  CommonValueConverter,\n  Info,\n  InfoGeneratedModule,\n  InfoModule,\n  MatrixDiagram,\n  MermaidGeneratedSharedModule,\n  MermaidParseError,\n  Packet,\n  PacketBlock,\n  PacketGeneratedModule,\n  PacketModule,\n  Pie,\n  PieGeneratedModule,\n  PieModule,\n  PieSection,\n  TestSlidesDiagram,\n  VisSlidesDiagram,\n  VisualDiagram,\n  VisualDiagramModule,\n  createArrayServices,\n  createInfoServices,\n  createPacketServices,\n  createPieServices,\n  createVisualDiagramServices,\n  isArrayDiagram,\n  isCommon,\n  isInfo,\n  isPacket,\n  isPacketBlock,\n  isPie,\n  isPieSection,\n  parse\n};\n"],
  "mappings": ";;;;;;;;AAmDA,IAAI,UAAU,CAAC;AACf,IAAI,eAAe;AAAA,EACjB,MAAM,YAAY;AAChB,UAAM,EAAE,oBAAoB,oBAAoB,IAAI,MAAM,OAAO,8BAAgD;AACjH,UAAM,SAAS,oBAAoB,EAAE,KAAK,OAAO;AACjD,YAAQ,MAAM,IAAI;AAAA,EACpB;AAAA,EACA,QAAQ,YAAY;AAClB,UAAM,EAAE,sBAAsB,sBAAsB,IAAI,MAAM,OAAO,gCAAkD;AACvH,UAAM,SAAS,sBAAsB,EAAE,OAAO,OAAO;AACrD,YAAQ,QAAQ,IAAI;AAAA,EACtB;AAAA,EACA,KAAK,YAAY;AACf,UAAM,EAAE,mBAAmB,mBAAmB,IAAI,MAAM,OAAO,6BAA+C;AAC9G,UAAM,SAAS,mBAAmB,EAAE,IAAI,OAAO;AAC/C,YAAQ,KAAK,IAAI;AAAA,EACnB;AAAA,EACA,OAAO,YAAY;AACjB,UAAM,EAAE,qBAAqB,qBAAqB,IAAI,MAAM,OAAO,+BAAiD;AACpH,UAAM,SAAS,qBAAqB,EAAE,MAAM,OAAO;AACnD,YAAQ,OAAO,IAAI;AAAA,EACrB;AAAA,EACA,QAAQ,YAAY;AAClB,UAAM,EAAE,qBAAqB,IAAI,MAAM,OAAO,gCAAkD;AAChG,UAAM,SAAS,qBAAqB,EAAE,OAAO,OAAO;AACpD,YAAQ,QAAQ,IAAI;AAAA,EACtB;AAAA,EACA,YAAY,YAAY;AACtB,UAAM,EAAE,yBAAyB,IAAI,MAAM,OAAO,oCAAsD;AACxG,UAAM,SAAS,yBAAyB,EAAE,WAAW,OAAO;AAC5D,YAAQ,YAAY,IAAI;AAAA,EAC1B;AAAA,EACA,WAAW,YAAY;AACrB,UAAM,EAAE,wBAAwB,IAAI,MAAM,OAAO,mCAAqD;AACtG,UAAM,SAAS,wBAAwB,EAAE,UAAU,OAAO;AAC1D,YAAQ,WAAW,IAAI;AAAA,EACzB;AAAA,EACA,QAAQ,YAAY;AAClB,UAAM,EAAE,6BAA6B,6BAA6B,IAAI,MAAM,OAAO,gCAAkD;AACrI,UAAM,SAAS,6BAA6B,EAAE,cAAc,OAAO;AACnE,YAAQ,QAAQ,IAAI;AAAA,EACtB;AACF;AACA,eAAe,MAAM,aAAa,MAAM;AACtC,QAAM,cAAc,aAAa,WAAW;AAC5C,MAAI,CAAC,aAAa;AAChB,UAAM,IAAI,MAAM,yBAAyB,WAAW,EAAE;AAAA,EACxD;AACA,MAAI,CAAC,QAAQ,WAAW,GAAG;AACzB,UAAM,YAAY;AAAA,EACpB;AACA,QAAM,SAAS,QAAQ,WAAW;AAClC,QAAM,SAAS,OAAO,MAAM,IAAI;AAChC,MAAI,OAAO,YAAY,SAAS,KAAK,OAAO,aAAa,SAAS,GAAG;AACnE,UAAM,IAAI,kBAAkB,MAAM;AAAA,EACpC;AACA,SAAO,OAAO;AAChB;AAde;AAefA,QAAO,OAAO,OAAO;AACrB,IAAI,oBAAoB,cAAc,MAAM;AAAA,EA9G5C,OA8G4C;AAAA;AAAA;AAAA,EAC1C,YAAY,QAAQ;AAClB,UAAM,cAAc,OAAO,YAAY,IAAI,CAAC,QAAQ,IAAI,OAAO,EAAE,KAAK,IAAI;AAC1E,UAAM,eAAe,OAAO,aAAa,IAAI,CAAC,QAAQ,IAAI,OAAO,EAAE,KAAK,IAAI;AAC5E,UAAM,mBAAmB,WAAW,IAAI,YAAY,EAAE;AACtD,SAAK,SAAS;AAAA,EAChB;AAAA,EACA,OAAO;AACL,IAAAA,QAAO,MAAM,mBAAmB;AAAA,EAClC;AACF;",
  "names": ["__name"]
}
