{
  "version": 3,
  "sources": ["../../../src/diagrams/array/db.ts", "../../../src/diagrams/array/parser.ts", "../../../src/diagrams/array/renderer.ts", "../../../src/diagrams/array/styles.ts", "../../../src/diagrams/array/diagram.ts"],
  "sourcesContent": ["import { getConfig as commonGetConfig } from '../../config.js';\nimport type { ArrayDiagramConfig } from '../../config.type.js';\nimport DEFAULT_CONFIG from '../../defaultConfig.js';\nimport { cleanAndMerge } from '../../utils.js';\nimport {\n  clear as commonClear,\n  getAccDescription,\n  getAccTitle,\n  getDiagramTitle,\n  setAccDescription,\n  setAccTitle,\n  setDiagramTitle,\n} from '../common/commonDb.js';\nimport type { ArrayDB, ArrayData, ArrayElement } from './types.js';\n\nconst defaultArrayData: ArrayData = {\n  elements: [],\n};\n\nlet data: ArrayData = structuredClone(defaultArrayData);\n\nconst DEFAULT_ARRAY_CONFIG: Required<ArrayDiagramConfig> = DEFAULT_CONFIG.array;\n\nconst getConfig = (): Required<ArrayDiagramConfig> => {\n  // debug print\n  // console.log('db.ts getConfig return: ', cleanAndMerge({\n  //   ...DEFAULT_ARRAY_CONFIG,\n  //   ...commonGetConfig().array,\n  // }));\n  return cleanAndMerge({\n    ...DEFAULT_ARRAY_CONFIG,\n    ...commonGetConfig().array,\n  });\n};\n\nconst getArray = (): ArrayElement[] => data.elements;\n\nconst addElement = (element: ArrayElement) => {\n  // console.log('db addElement element: ', element);\n  data.elements.push(element);\n};\n\nconst clear = () => {\n  // debug print\n  // console.log('db.ts clear is called');\n  commonClear();\n  data = structuredClone(defaultArrayData);\n};\n\nexport const db: ArrayDB = {\n  addElement,\n  getArray,\n  getConfig,\n  clear,\n  setAccTitle,\n  getAccTitle,\n  setDiagramTitle,\n  getDiagramTitle,\n  getAccDescription,\n  setAccDescription,\n};\n\n// console.log(\"db.ts - db: \", db);\n", "import type { ArrayDiagram } from '@mermaid-js/parser';\nimport { parse } from '@mermaid-js/parser';\nimport type { ParserDefinition } from '../../diagram-api/types.js';\nimport { log } from '../../logger.js';\nimport { populateCommonDb } from '../common/populateCommonDb.js';\nimport { db } from './db.js';\n\nconst populate = (ast: ArrayDiagram) => {\n  populateCommonDb(ast, db);\n  for (const element of ast.elements) {\n    const index = ast.elements.indexOf(element);\n    if (index < 0) {\n      throw new Error(`Array index ${index} is invalid. Index must be non-negative.`);\n    }\n    log.debug(`Array element at index ${index} with value ${element.value}`);\n\n    // Add the element to the database with the arrow, context, and color properties if they exist\n    db.addElement({\n      index,\n      value: element.value,\n      arrow: element.arrow ? true : false, // Convert arrow to boolean\n      context: element.context || undefined, // Add context if it exists\n      color: element.color || 'none', // Add color if it exists, default to 'none'\n    });\n  }\n};\n\nexport const parser: ParserDefinition = {\n  parse: async (input: string): Promise<void> => {\n    const ast: ArrayDiagram = await parse('array', input);\n    // console.log('diagram/array/parser ast: ', ast);\n    log.debug(ast);\n    populate(ast);\n  },\n};\n", "import type { Diagram } from '../../Diagram.js';\nimport type { ArrayDiagramConfig } from '../../config.type.js';\nimport type { DiagramRenderer, DrawDefinition, Group, SVG } from '../../diagram-api/types.js';\nimport { selectSvgElement } from '../../rendering-util/selectSvgElement.js';\nimport { configureSvgSize } from '../../setupGraphViewbox.js';\nimport type { ArrayDB, ArrayElement } from './types.js';\n\n// cspell:ignore showindex\nconst showindex_key_word = 'showindex';\n\nconst draw: DrawDefinition = (_text, id, _version, diagram: Diagram) => {\n  const db = diagram.db as ArrayDB;\n  const config = db.getConfig();\n  const { elementColor, borderColor, borderWidth, labelColor, labelFontSize } = config;\n  const elements = db.getArray();\n  const showIndex = diagram.text.toLowerCase().includes(showindex_key_word); // Check for showIndex in a case-insensitive manner\n  const title = db.getDiagramTitle();\n  const svgHeight = 300; // Increased the height to provide more space above\n  const svgWidth = 800; // Adjust the width as needed\n  const svg: SVG = selectSvgElement(id);\n\n  svg.attr('viewbox', `0 0 ${svgWidth} ${svgHeight}`);\n  configureSvgSize(svg, svgHeight, svgWidth, config.useMaxWidth);\n\n  defineArrowhead(svg); // Ensure arrowhead marker is defined\n\n  for (const [index, element] of elements.entries()) {\n    drawElement(svg, element, index, config, showIndex);\n  }\n\n  if (title) {\n    svg\n      .append('text')\n      .text(title)\n      .attr('x', svgWidth / 2)\n      .attr('y', 25)\n      .attr('dominant-baseline', 'middle')\n      .attr('text-anchor', 'middle')\n      .attr('class', 'arrayTitle');\n  }\n};\n\nconst drawElement = (\n  svg: SVG,\n  element: ArrayElement,\n  index: number,\n  {\n    elementColor,\n    borderColor,\n    borderWidth,\n    labelColor,\n    labelFontSize,\n  }: Required<ArrayDiagramConfig>,\n  showIndex: boolean\n) => {\n  const group: Group = svg.append('g');\n  const elementX = index * 50 + 50; // Adjust the x coordinate based on the index\n  const elementY = 100; // Increased the y coordinate to provide more space above\n\n  const getColor = (color: string) => {\n    switch (color) {\n      case 'blue':\n        return 'rgba(0, 0, 255, 0.3)'; // Semi-transparent blue\n      case 'red':\n        return 'rgba(255, 0, 0, 0.3)'; // Semi-transparent red\n      case 'green':\n        return 'rgba(0, 255, 0, 0.3)'; // Semi-transparent green\n      default:\n        return 'none';\n    }\n  };\n\n  if (element.arrow) {\n    // Draw arrow\n    const arrowYStart = elementY - 40; // Position the arrow head higher\n    const arrowYEnd = elementY - 10; // Position the end of the arrow at the top edge of the square\n    group\n      .append('line')\n      .attr('x1', elementX + 20)\n      .attr('y1', arrowYStart)\n      .attr('x2', elementX + 20)\n      .attr('y2', arrowYEnd)\n      .attr('stroke', 'black')\n      .attr('marker-end', 'url(#arrowhead)');\n\n    // Draw arrow context if it exists\n    if (element.context) {\n      group\n        .append('text')\n        .attr('x', elementX + 20)\n        .attr('y', arrowYStart - 10) // Position it slightly above the arrow start\n        .attr('fill', labelColor)\n        .attr('font-size', labelFontSize)\n        .attr('dominant-baseline', 'hanging') // Changed to hanging to avoid cut-off\n        .attr('text-anchor', 'middle')\n        .attr('class', 'arrowContext')\n        .text(element.context);\n    }\n  }\n\n  group\n    .append('rect')\n    .attr('x', elementX)\n    .attr('y', elementY)\n    .attr('width', 40)\n    .attr('height', 40)\n    .style('fill', getColor(element.color ? element.color : 'none')) // Apply the semi-transparent fill color if specified, else none\n    .attr('stroke', '#69b3a2')\n    .attr('stroke-width', '3px')\n    .attr('class', 'arrayElement');\n\n  group\n    .append('text')\n    .attr('x', elementX + 20)\n    .attr('y', elementY + 20)\n    .attr('fill', labelColor)\n    .attr('font-size', labelFontSize)\n    .attr('dominant-baseline', 'middle')\n    .attr('text-anchor', 'middle')\n    .attr('class', 'elementLabel')\n    .text(element.value);\n\n  if (showIndex) {\n    group\n      .append('text')\n      .attr('x', elementX + 20)\n      .attr('y', elementY + 60) // Position below the rectangle\n      .attr('fill', labelColor)\n      .attr('font-size', 25) // Slightly smaller font for the index\n      .attr('dominant-baseline', 'middle')\n      .attr('text-anchor', 'middle')\n      .attr('class', 'indexLabel')\n      .text(index);\n  }\n};\n\n// Define arrowhead marker\nconst defineArrowhead = (svg: SVG) => {\n  svg\n    .append('defs')\n    .append('marker')\n    .attr('id', 'arrowhead')\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', '5')\n    .attr('refY', '5')\n    .attr('markerWidth', '6')\n    .attr('markerHeight', '6')\n    .attr('orient', 'auto-start-reverse')\n    .append('path')\n    .attr('d', 'M 0 0 L 10 5 L 0 10 z')\n    .attr('fill', 'black');\n};\n\nexport const renderer: DiagramRenderer = { draw };\n", "import { log } from '../../logger.js';\n\nexport const styles = (options: any = {}) => {\n  log.debug({ options });\n  return `\n    .element {\n      font-size: ${options.array?.elementFontSize ?? '10px'};\n      fill: ${options.array?.valueColor ?? 'black'};\n    }\n    .element.index {\n      fill: ${options.array?.indexColor ?? 'black'};\n    }\n    .element {\n      stroke: ${options.array?.elementStrokeColor ?? 'black'};\n      stroke-width: ${options.array?.elementStrokeWidth ?? '1'};\n      fill: ${options.array?.elementFillColor ?? '#efefef'};\n    }\n  `;\n};\n\nexport default styles;\n", "import type { DiagramDefinition } from '../../diagram-api/types.js';\nimport { db } from './db.js';\nimport { parser } from './parser.js';\nimport { renderer } from './renderer.js';\nimport { styles } from './styles.js';\n\nexport const diagram: DiagramDefinition = {\n  parser,\n  db,\n  renderer,\n  styles,\n};\n"],
  "mappings": "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",
  "names": ["getConfig", "clear", "diagram", "db"]
}
