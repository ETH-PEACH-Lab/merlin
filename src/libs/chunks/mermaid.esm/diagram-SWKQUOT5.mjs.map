{
  "version": 3,
  "sources": ["../../../src/diagrams/matrix/db.ts", "../../../src/diagrams/matrix/parser.ts", "../../../src/diagrams/matrix/renderer.ts", "../../../src/diagrams/matrix/styles.ts", "../../../src/diagrams/matrix/diagram.ts"],
  "sourcesContent": ["import { getConfig as commonGetConfig } from '../../config.js';\nimport type { MatrixDiagramConfig } from '../../config.type.js';\nimport DEFAULT_CONFIG from '../../defaultConfig.js';\nimport { cleanAndMerge } from '../../utils.js';\nimport {\n  clear as commonClear,\n  getAccDescription,\n  getAccTitle,\n  getDiagramTitle,\n  setAccDescription,\n  setAccTitle,\n  setDiagramTitle,\n} from '../common/commonDb.js';\nimport type { MatrixDB, MatrixData, MatrixRow } from './types.js';\n\nconst defaultMatrixData: MatrixData = {\n  rows: [],\n};\n\nlet data: MatrixData = structuredClone(defaultMatrixData);\n\nconst DEFAULT_MATRIX_CONFIG: Required<MatrixDiagramConfig> = DEFAULT_CONFIG.matrix;\n\nconst getConfig = (): Required<MatrixDiagramConfig> => {\n  return cleanAndMerge({\n    ...DEFAULT_MATRIX_CONFIG,\n    ...commonGetConfig().matrix,\n  });\n};\n\nconst getMatrix = (): MatrixRow[] => data.rows;\n\nconst addRow = (row: MatrixRow) => {\n  data.rows.push(row);\n};\n\nconst clear = () => {\n  commonClear();\n  data = structuredClone(defaultMatrixData);\n};\n\nexport const db: MatrixDB = {\n  addRow,\n  getMatrix,\n  getConfig,\n  clear,\n  setAccTitle,\n  getAccTitle,\n  setDiagramTitle,\n  getDiagramTitle,\n  getAccDescription,\n  setAccDescription,\n};\n", "import type { MatrixDiagram } from '@mermaid-js/parser';\nimport { parse } from '@mermaid-js/parser';\nimport type { ParserDefinition } from '../../diagram-api/types.js';\nimport { log } from '../../logger.js';\nimport { db } from './db.js';\nimport type { MatrixRow, MatrixElement as LocalMatrixElement } from './types.js';\n\nconst populate = (ast: MatrixDiagram) => {\n  for (const row of ast.rows) {\n    const elements: LocalMatrixElement[] = row.elements.map((e) => ({\n      value: e.value as string | number,\n      color: e.color as 'blue' | 'green' | 'red' | undefined,\n    }));\n    db.addRow({ elements });\n  }\n};\n\nexport const parser: ParserDefinition = {\n  parse: async (input: string): Promise<void> => {\n    const ast: MatrixDiagram = await parse('matrix', input);\n    log.debug(ast);\n    populate(ast);\n  },\n};\n", "import type { Diagram } from '../../Diagram.js';\nimport type { MatrixDiagramConfig } from '../../config.type.js';\nimport type { DiagramRenderer, DrawDefinition, Group, SVG } from '../../diagram-api/types.js';\nimport { selectSvgElement } from '../../rendering-util/selectSvgElement.js';\nimport { configureSvgSize } from '../../setupGraphViewbox.js';\nimport type { MatrixDB, MatrixRow, MatrixElement } from './types.js';\n\nconst draw: DrawDefinition = (_text, id, _version, diagram: Diagram) => {\n  const db = diagram.db as MatrixDB;\n  const config = db.getConfig();\n  const matrix = db.getMatrix();\n  const title = db.getDiagramTitle();\n  // cspell:ignore showindex\n  const showIndex = diagram.text.toLowerCase().includes('showindex'); // Check for showIndex in a case-insensitive manner\n  const svgHeight = 1600;\n  const svgWidth = 1600;\n  const svg: SVG = selectSvgElement(id);\n\n  svg.attr('viewbox', `0 0 ${svgWidth} ${svgHeight}`);\n  configureSvgSize(svg, svgHeight, svgWidth, config.useMaxWidth);\n\n  if (title) {\n    svg\n      .append('text')\n      .text(title)\n      .attr('x', svgWidth / 2)\n      .attr('y', 25)\n      .attr('dominant-baseline', 'middle')\n      .attr('text-anchor', 'middle')\n      .attr('class', 'matrixTitle');\n  }\n\n  for (const [rowIndex, row] of matrix.entries()) {\n    for (const [colIndex, element] of row.elements.entries()) {\n      drawElement(svg, element, rowIndex, colIndex, config, showIndex);\n    }\n  }\n\n  if (showIndex) {\n    drawIndices(svg, matrix.length, matrix[0]?.elements.length || 0, config);\n  }\n};\n\nconst getColor = (color?: string): string => {\n  switch (color) {\n    case 'blue':\n      return 'rgba(0, 0, 255, 0.4)'; // Semi-transparent blue\n    case 'green':\n      return 'rgba(0, 255, 0, 0.4)'; // Semi-transparent green\n    case 'red':\n      return 'rgba(255, 0, 0, 0.4)'; // Semi-transparent red\n    default:\n      return 'none';\n  }\n};\n\nconst drawElement = (\n  svg: SVG,\n  element: MatrixElement,\n  rowIndex: number,\n  colIndex: number,\n  { borderColor, borderWidth, labelColor, labelFontSize }: Required<MatrixDiagramConfig>,\n  showIndex: boolean\n) => {\n  const group: Group = svg.append('g');\n  const elementX = colIndex * 50 + 50;\n  const elementY = rowIndex * 50 + 50;\n\n  const fillColor = getColor(element.color);\n\n  group\n    .append('rect')\n    .attr('x', elementX)\n    .attr('y', elementY)\n    .attr('width', 50)\n    .attr('height', 50)\n    .style('fill', fillColor)\n    .attr('stroke', 'blue')\n    .attr('stroke-width', 1)\n    .attr('class', 'matrixElement');\n\n  group\n    .append('text')\n    .attr('x', elementX + 20)\n    .attr('y', elementY + 20)\n    .attr('fill', labelColor)\n    .attr('font-size', labelFontSize)\n    .attr('dominant-baseline', 'middle')\n    .attr('text-anchor', 'middle')\n    .attr('class', 'elementLabel')\n    .text(element.value.toString());\n};\n\nconst drawIndices = (\n  svg: SVG,\n  rowCount: number,\n  colCount: number,\n  { labelColor, labelFontSize }: Required<MatrixDiagramConfig>\n) => {\n  // Draw row indices on the left\n  for (let rowIndex = 0; rowIndex < rowCount; rowIndex++) {\n    svg\n      .append('text')\n      .attr('x', 20)\n      .attr('y', rowIndex * 50 + 70)\n      .attr('fill', labelColor)\n      .attr('font-size', labelFontSize)\n      .attr('dominant-baseline', 'middle')\n      .attr('text-anchor', 'middle')\n      .attr('class', 'indexLabel')\n      .text(rowIndex.toString());\n  }\n\n  // Draw column indices at the bottom\n  for (let colIndex = 0; colIndex < colCount; colIndex++) {\n    svg\n      .append('text')\n      .attr('x', colIndex * 50 + 70)\n      .attr('y', rowCount * 50 + 70)\n      .attr('fill', labelColor)\n      .attr('font-size', labelFontSize)\n      .attr('dominant-baseline', 'middle')\n      .attr('text-anchor', 'middle')\n      .attr('class', 'indexLabel')\n      .text(colIndex.toString());\n  }\n};\n\nexport const renderer: DiagramRenderer = { draw };\n", "import { log } from '../../logger.js';\n\nexport const styles = (options: any = {}) => {\n  log.debug({ options });\n  return `\n    .element {\n      font-size: ${options.array?.elementFontSize ?? '10px'};\n      fill: ${options.array?.valueColor ?? 'black'};\n    }\n    .element.index {\n      fill: ${options.array?.indexColor ?? 'black'};\n    }\n    .element {\n      stroke: ${options.array?.elementStrokeColor ?? 'black'};\n      stroke-width: ${options.array?.elementStrokeWidth ?? '1'};\n      fill: ${options.array?.elementFillColor ?? '#efefef'};\n    }\n  `;\n};\n\nexport default styles;\n", "import type { DiagramDefinition } from '../../diagram-api/types.js';\nimport { db } from './db.js';\nimport { parser } from './parser.js';\nimport { renderer } from './renderer.js';\nimport { styles } from './styles.js';\n\nexport const diagram: DiagramDefinition = {\n  parser,\n  db,\n  renderer,\n  styles,\n};\n"],
  "mappings": "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",
  "names": ["getConfig", "clear", "diagram", "db"]
}
