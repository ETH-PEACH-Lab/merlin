{
  "version": 3,
  "sources": ["../../../src/diagrams/visslides/db.ts", "../../../src/diagrams/visslides/parser.ts", "../../../src/diagrams/visslides/drawArrayDiagram.ts", "../../../src/diagrams/visslides/drawMatrixDiagram.ts", "../../../src/diagrams/visslides/renderer.ts", "../../../src/diagrams/visslides/styles.ts", "../../../src/diagrams/visslides/diagram.ts"],
  "sourcesContent": ["import { getConfig as commonGetConfig } from '../../config.js';\nimport type { VisSlidesDiagramConfig } from '../../config.type.js';\nimport DEFAULT_CONFIG from '../../defaultConfig.js';\nimport { cleanAndMerge } from '../../utils.js';\nimport {\n  clear as commonClear,\n  getAccDescription,\n  getAccTitle,\n  getDiagramTitle,\n  setAccDescription,\n  setAccTitle,\n  setDiagramTitle,\n} from '../common/commonDb.js';\nimport type { VisSlidesDB, VisSlidePage } from './types.js';\n\n// cspell:ignore visslides\nconst defaultVisSlidesData: VisSlidePage[] = [];\n\nlet data: VisSlidePage[] = [...defaultVisSlidesData];\n\nconst DEFAULT_VISSLIDES_CONFIG: Required<VisSlidesDiagramConfig> = DEFAULT_CONFIG.visslides;\n\nconst getConfig = (): Required<VisSlidesDiagramConfig> => {\n  return cleanAndMerge({\n    ...DEFAULT_VISSLIDES_CONFIG,\n    ...commonGetConfig().visslides,\n  });\n};\n\nconst getPages = (): VisSlidePage[] => data;\n\nconst addPage = (page: VisSlidePage) => {\n  data.push(page);\n};\n\nconst clear = () => {\n  commonClear();\n  data = [...defaultVisSlidesData];\n};\n\nexport const db: VisSlidesDB = {\n  getPages,\n  addPage,\n  getConfig,\n  clear,\n  setAccTitle,\n  getAccTitle,\n  setDiagramTitle,\n  getDiagramTitle,\n  getAccDescription,\n  setAccDescription,\n};\n", "import type { VisSlidesDiagram } from '@mermaid-js/parser';\nimport { parse } from '@mermaid-js/parser';\nimport type { ParserDefinition } from '../../diagram-api/types.js';\nimport { log } from '../../logger.js';\nimport { populateCommonDb } from '../common/populateCommonDb.js';\nimport { db } from './db.js';\n\nconst populate = (ast: VisSlidesDiagram) => {\n  populateCommonDb(ast, db);\n  for (const page of ast.pages) {\n    const subDiagrams = page.subDiagrams.map((subDiagram) => {\n      if ('elements' in subDiagram) {\n        return {\n          elements: subDiagram.elements.map((e) => ({\n            value: 1,\n          })),\n        };\n      } else {\n        return {\n          rows: subDiagram.rows.map((row) => ({\n            elements: row.elements.map((e) => ({\n              value: 1,\n            })),\n          })),\n        };\n      }\n    });\n\n    db.addPage({ subDiagrams });\n  }\n};\n\nexport const parser: ParserDefinition = {\n  parse: async (input: string): Promise<void> => {\n    // cspell:ignore visslides\n    const ast: VisSlidesDiagram = await parse('visslides', input);\n    log.debug(ast);\n    populate(ast);\n  },\n};\n", "import type { ArrayDiagram, ArrayElement } from './types.js';\nimport type { ArrayDiagramConfig } from '../../config.type.js';\nimport type { DiagramRenderer, DrawDefinition, Group, SVG } from '../../diagram-api/types.js';\n\nexport const drawArrayDiagram = (\n  svg: SVG,\n  arrayDiagram: ArrayDiagram,\n  yOffset: number,\n  config: Required<ArrayDiagramConfig>\n) => {\n  const group = svg.append('g').attr('transform', `translate(0, ${yOffset})`);\n\n  arrayDiagram.elements.forEach((element, index) => {\n    drawElement(group as unknown as SVG, element, index, config, arrayDiagram.showIndex || false);\n  });\n};\n\nconst drawElement = (\n  svg: SVG,\n  element: ArrayElement,\n  index: number,\n  {\n    elementColor,\n    borderColor,\n    borderWidth,\n    labelColor,\n    labelFontSize,\n  }: Required<ArrayDiagramConfig>,\n  showIndex: boolean\n) => {\n  const group = svg.append('g');\n  const elementX = index * 50 + 50;\n  const elementY = 50;\n\n  const fillColor = getColor(element.color);\n\n  if (element.arrow) {\n    const arrowYStart = elementY - 40;\n    const arrowYEnd = elementY - 10;\n    group\n      .append('line')\n      .attr('x1', elementX + 20)\n      .attr('y1', arrowYStart)\n      .attr('x2', elementX + 20)\n      .attr('y2', arrowYEnd)\n      .attr('stroke', 'black')\n      .attr('marker-end', 'url(#arrowhead)');\n\n    if (element.context) {\n      group\n        .append('text')\n        .attr('x', elementX + 20)\n        .attr('y', arrowYStart - 10)\n        .attr('fill', labelColor)\n        .attr('font-size', labelFontSize)\n        .attr('dominant-baseline', 'hanging')\n        .attr('text-anchor', 'middle')\n        .attr('class', 'arrowContext')\n        .text(element.context);\n    }\n  }\n\n  group\n    .append('rect')\n    .attr('x', elementX)\n    .attr('y', elementY)\n    .attr('width', 40)\n    .attr('height', 40)\n    .style('fill', fillColor)\n    .attr('stroke', '#191970')\n    .attr('stroke-width', '2px')\n    .attr('class', 'arrayElement');\n\n  group\n    .append('text')\n    .attr('x', elementX + 20)\n    .attr('y', elementY + 20)\n    .attr('fill', labelColor)\n    .attr('font-size', labelFontSize)\n    .attr('dominant-baseline', 'middle')\n    .attr('text-anchor', 'middle')\n    .attr('class', 'elementLabel')\n    .text(element.value);\n\n  if (showIndex) {\n    group\n      .append('text')\n      .attr('x', elementX + 20)\n      .attr('y', elementY + 60)\n      .attr('fill', labelColor)\n      .attr('font-size', 25)\n      .attr('dominant-baseline', 'middle')\n      .attr('text-anchor', 'middle')\n      .attr('class', 'indexLabel')\n      .text(index);\n  }\n};\n\nconst getColor = (color?: string): string => {\n  switch (color) {\n    case 'blue':\n      return 'rgba(0, 0, 255, 0.3)';\n    case 'green':\n      return 'rgba(0, 255, 0, 0.3)';\n    case 'red':\n      return 'rgba(255, 0, 0, 0.3)';\n    default:\n      return 'none';\n  }\n};\n", "import type { MatrixDiagram, MatrixRow, MatrixElement } from './types.js';\nimport type { MatrixDiagramConfig } from '../../config.type.js';\nimport type { DiagramRenderer, DrawDefinition, Group, SVG } from '../../diagram-api/types.js';\n\nexport const drawMatrixDiagram = (\n  svg: SVG,\n  matrixDiagram: MatrixDiagram,\n  yOffset: number,\n  config: Required<MatrixDiagramConfig>\n) => {\n  const group = svg.append('g').attr('transform', `translate(0, ${yOffset})`);\n\n  matrixDiagram.rows.forEach((row, rowIndex) => {\n    row.elements.forEach((element, colIndex) => {\n      drawElement(group as unknown as SVG, element, rowIndex, colIndex, config);\n    });\n  });\n};\n\nconst drawElement = (\n  svg: SVG,\n  element: MatrixElement,\n  rowIndex: number,\n  colIndex: number,\n  { borderColor, borderWidth, labelColor, labelFontSize }: Required<MatrixDiagramConfig>\n) => {\n  const group = svg.append('g');\n  const elementX = colIndex * 50 + 50;\n  const elementY = rowIndex * 50 + 50;\n\n  const fillColor = getColor(element.color);\n\n  group\n    .append('rect')\n    .attr('x', elementX)\n    .attr('y', elementY)\n    .attr('width', 48)\n    .attr('height', 48)\n    .style('fill', fillColor)\n    .attr('stroke', '#191970')\n    .attr('stroke-width', '1.5px')\n    .attr('class', 'matrixElement');\n\n  group\n    .append('text')\n    .attr('x', elementX + 20)\n    .attr('y', elementY + 20)\n    .attr('fill', labelColor)\n    .attr('font-size', labelFontSize)\n    .attr('dominant-baseline', 'middle')\n    .attr('text-anchor', 'middle')\n    .attr('class', 'elementLabel')\n    .text(element.value.toString());\n};\n\nconst getColor = (color?: string): string => {\n  switch (color) {\n    case 'blue':\n      return 'rgba(0, 0, 255, 0.3)';\n    case 'green':\n      return 'rgba(0, 255, 0, 0.3)';\n    case 'red':\n      return 'rgba(255, 0, 0, 0.3)';\n    default:\n      return 'none';\n  }\n};\n", "import * as d3 from 'd3';\nimport type { Diagram } from '../../Diagram.js';\nimport type { DiagramRenderer, DrawDefinition, SVG } from '../../diagram-api/types.js';\nimport { selectSvgElement } from '../../rendering-util/selectSvgElement.js';\nimport { configureSvgSize } from '../../setupGraphViewbox.js';\nimport type { VisSlidesDB, VisSlidePage, ArrayDiagram, MatrixDiagram } from './types.js';\nimport { drawArrayDiagram } from './drawArrayDiagram.js';\nimport { drawMatrixDiagram } from './drawMatrixDiagram.js';\n\nconst draw: DrawDefinition = (_text, id, _version, diagram: Diagram) => {\n  const db = diagram.db as VisSlidesDB;\n  const config = db.getConfig();\n  const pages = db.getPages();\n  const title = db.getDiagramTitle();\n  const svgHeight = 800;\n  const svgWidth = 1000;\n  const svg: SVG = selectSvgElement(id);\n\n  let currentPage = 0;\n  let playInterval: number | null = null;\n\n  const renderPage = (pageIndex: number) => {\n    svg.selectAll('g.page').attr('display', 'none');\n    svg.select(`#page${pageIndex}`).attr('display', 'inline');\n\n    // Update button states\n    svg.select('#prevButton').attr('fill', pageIndex > 0 ? '#007bff' : '#c0c0c0');\n    svg.select('#nextButton').attr('fill', pageIndex < pages.length - 1 ? '#007bff' : '#c0c0c0');\n\n    // Update current page display\n    svg.select('#pageIndicator').text(`${pageIndex + 1} / ${pages.length}`);\n  };\n\n  const addNavigationButtons = (svg: SVG, totalPages: number) => {\n    const buttonGroup = svg.append('g').attr('class', 'navigation-buttons');\n\n    const buttonWidth = 40;\n    const buttonHeight = 20;\n    const buttonSpacing = 10;\n\n    const buttonsX = svgWidth / 2 - (buttonWidth * 1.5 + buttonSpacing);\n    const buttonsY = svgHeight - 60; // Adjusted y position\n\n    // Prev button\n    const prevButtonGroup = buttonGroup\n      .append('g')\n      .attr('id', 'prevButtonGroup')\n      .attr('cursor', 'pointer');\n\n    prevButtonGroup\n      .append('rect')\n      .attr('id', 'prevButton')\n      .attr('x', buttonsX)\n      .attr('y', buttonsY)\n      .attr('width', buttonWidth)\n      .attr('height', buttonHeight)\n      .attr('fill', '#c0c0c0'); // Initially disabled\n\n    prevButtonGroup\n      .append('text')\n      .text('<')\n      .attr('x', buttonsX + buttonWidth / 2)\n      .attr('y', buttonsY + buttonHeight / 2)\n      .attr('fill', 'white')\n      .attr('text-anchor', 'middle')\n      .attr('alignment-baseline', 'middle');\n\n    // Play button\n    const playButtonGroup = buttonGroup\n      .append('g')\n      .attr('id', 'playButtonGroup')\n      .attr('cursor', 'pointer');\n\n    playButtonGroup\n      .append('rect')\n      .attr('id', 'playButton')\n      .attr('x', buttonsX + buttonWidth + buttonSpacing)\n      .attr('y', buttonsY)\n      .attr('width', buttonWidth)\n      .attr('height', buttonHeight)\n      .attr('fill', '#007bff'); // Initially enabled\n\n    playButtonGroup\n      .append('text')\n      .text('\u25B6')\n      .attr('x', buttonsX + buttonWidth + buttonSpacing + buttonWidth / 2)\n      .attr('y', buttonsY + buttonHeight / 2)\n      .attr('fill', 'white')\n      .attr('text-anchor', 'middle')\n      .attr('alignment-baseline', 'middle');\n\n    // Next button\n    const nextButtonGroup = buttonGroup\n      .append('g')\n      .attr('id', 'nextButtonGroup')\n      .attr('cursor', 'pointer');\n\n    nextButtonGroup\n      .append('rect')\n      .attr('id', 'nextButton')\n      .attr('x', buttonsX + 2 * (buttonWidth + buttonSpacing))\n      .attr('y', buttonsY)\n      .attr('width', buttonWidth)\n      .attr('height', buttonHeight)\n      .attr('fill', '#007bff'); // Initially enabled\n\n    nextButtonGroup\n      .append('text')\n      .text('>')\n      .attr('x', buttonsX + 2 * (buttonWidth + buttonSpacing) + buttonWidth / 2)\n      .attr('y', buttonsY + buttonHeight / 2)\n      .attr('fill', 'white')\n      .attr('text-anchor', 'middle')\n      .attr('alignment-baseline', 'middle');\n\n    // Page indicator\n    buttonGroup\n      .append('text')\n      .attr('id', 'pageIndicator')\n      .attr('x', svgWidth - 50)\n      .attr('y', svgHeight - 50)\n      .attr('fill', 'black')\n      .attr('text-anchor', 'middle')\n      .attr('alignment-baseline', 'middle')\n      .text(`1 / ${totalPages}`);\n\n    prevButtonGroup.node()?.addEventListener('click', () => {\n      if (currentPage > 0) {\n        currentPage -= 1;\n        renderPage(currentPage);\n      }\n    });\n\n    nextButtonGroup.node()?.addEventListener('click', () => {\n      if (currentPage < totalPages - 1) {\n        currentPage += 1;\n        renderPage(currentPage);\n      }\n    });\n\n    playButtonGroup.node()?.addEventListener('click', () => {\n      if (playInterval) {\n        clearInterval(playInterval);\n        playInterval = null;\n        d3.select('#playButton text').text('\u25B6');\n        d3.select('#playButton').attr('fill', '#007bff');\n      } else {\n        playInterval = 1000;\n        d3.select('#playButton text').text('\u275A\u275A');\n        d3.select('#playButton').attr('fill', '#c0c0c0');\n      }\n    });\n  };\n\n  const drawPage = (svg: SVG, page: VisSlidePage, pageIndex: number) => {\n    const pageGroup = svg\n      .append('g')\n      .attr('id', `page${pageIndex}`)\n      .attr('class', 'page')\n      .attr('display', pageIndex === 0 ? 'inline' : 'none');\n\n    if (title) {\n      pageGroup\n        .append('text')\n        .text(title)\n        .attr('x', svgWidth / 2)\n        .attr('y', 25)\n        .attr('dominant-baseline', 'middle')\n        .attr('text-anchor', 'middle')\n        .attr('class', 'pageTitle');\n    }\n\n    let yOffset = 50;\n\n    for (const subDiagram of page.subDiagrams) {\n      if ((subDiagram as ArrayDiagram).elements) {\n        drawArrayDiagram(pageGroup as unknown as SVG, subDiagram as ArrayDiagram, yOffset, config);\n        yOffset += 100; // Adjust the offset for next sub-diagram\n      } else {\n        drawMatrixDiagram(\n          pageGroup as unknown as SVG,\n          subDiagram as MatrixDiagram,\n          yOffset,\n          config\n        );\n        yOffset += 200; // Adjust the offset for next sub-diagram\n      }\n    }\n  };\n\n  svg.attr('viewBox', `0 0 ${svgWidth} ${svgHeight}`);\n  configureSvgSize(svg, svgHeight, svgWidth, config.useMaxWidth);\n\n  pages.forEach((page, index) => {\n    drawPage(svg, page, index);\n  });\n\n  addNavigationButtons(svg, pages.length);\n\n  renderPage(currentPage);\n\n  // Inject page-switching logic directly into the SVG as JavaScript\n  const switchPageScript = `\n    (function() {\n      const svg = document.getElementById('${id}');\n      let currentPage = 0;\n      const totalPages = ${pages.length};\n      let playInterval = null;\n\n      function renderPage(pageIndex) {\n        const pages = svg.querySelectorAll('g.page');\n        pages.forEach(page => {\n          page.style.display = 'none';\n        });\n        svg.querySelector('#page' + pageIndex).style.display = 'inline';\n\n        const prevButton = svg.querySelector('#prevButton');\n        const nextButton = svg.querySelector('#nextButton');\n        \n        if (prevButton) prevButton.setAttribute('fill', pageIndex > 0 ? '#007bff' : '#c0c0c0');\n        if (nextButton) nextButton.setAttribute('fill', pageIndex < totalPages - 1 ? '#007bff' : '#c0c0c0');\n\n        // Update current page display\n        svg.querySelector('#pageIndicator').textContent = (pageIndex + 1) + ' / ' + totalPages;\n      }\n\n      svg.querySelector('#prevButtonGroup').addEventListener('click', function() {\n        if (currentPage > 0) {\n          currentPage -= 1;\n          renderPage(currentPage);\n        }\n      });\n\n      svg.querySelector('#nextButtonGroup').addEventListener('click', function() {\n        if (currentPage < totalPages - 1) {\n          currentPage += 1;\n          renderPage(currentPage);\n        }\n      });\n\n      svg.querySelector('#playButtonGroup').addEventListener('click', function() {\n        if (playInterval) {\n          clearInterval(playInterval);\n          playInterval = null;\n          svg.querySelector('#playButton text').textContent = '\u25B6';\n          svg.querySelector('#playButton').setAttribute('fill', '#007bff');\n        } else {\n          playInterval = setInterval(() => {\n            if (currentPage < totalPages - 1) {\n              currentPage += 1;\n            } else {\n              currentPage = 0;\n            }\n            renderPage(currentPage);\n          }, 1000);\n          svg.querySelector('#playButton text').textContent = '\u275A\u275A';\n          svg.querySelector('#playButton').setAttribute('fill', '#c0c0c0');\n        }\n      });\n\n      renderPage(currentPage);\n    })();\n  `;\n\n  svg.append('script').attr('type', 'text/javascript').text(switchPageScript);\n};\n\nexport const renderer: DiagramRenderer = { draw };\n", "import { log } from '../../logger.js';\n\nexport const styles = (options: any = {}) => {\n  log.debug({ options });\n  return `\n    .element {\n      font-size: ${options.array?.elementFontSize ?? '10px'};\n      fill: ${options.array?.valueColor ?? 'black'};\n    }\n    .element.index {\n      fill: ${options.array?.indexColor ?? 'black'};\n    }\n    .element {\n      stroke: ${options.array?.elementStrokeColor ?? 'black'};\n      stroke-width: ${options.array?.elementStrokeWidth ?? '1'};\n      fill: ${options.array?.elementFillColor ?? '#efefef'};\n    }\n  `;\n};\n\nexport default styles;\n", "import type { DiagramDefinition } from '../../diagram-api/types.js';\nimport { db } from './db.js';\nimport { parser } from './parser.js';\nimport { renderer } from './renderer.js';\nimport { styles } from './styles.js';\n\nexport const diagram: DiagramDefinition = {\n  parser,\n  db,\n  renderer,\n  styles,\n};\n"],
  "mappings": "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",
  "names": ["getConfig", "clear", "drawElement", "getColor", "diagram", "db", "svg"]
}
