"use strict";(self.webpackChunkonsenui_v2_react_minimum=self.webpackChunkonsenui_v2_react_minimum||[]).push([[3925],{3925:(t,e,r)=>{r.d(e,{diagram:()=>C});var a=r(4208),n=r(1243),l=r(4584),i=r(9838),o=r(9610),s={rows:[]},d=structuredClone(s),c=i.UI.matrix,m=(0,o.K2)((()=>(0,l.$t)({...c,...(0,i.zj)().matrix})),"getConfig"),x=(0,o.K2)((()=>d.rows),"getMatrix"),g={addRow:(0,o.K2)((t=>{d.rows.push(t)}),"addRow"),getMatrix:x,getConfig:m,clear:(0,o.K2)((()=>{(0,i.IU)(),d=structuredClone(s)}),"clear"),setAccTitle:i.SV,getAccTitle:i.iN,setDiagramTitle:i.ke,getDiagramTitle:i.ab,getAccDescription:i.m7,setAccDescription:i.EI},b=(0,o.K2)((t=>{for(const e of t.rows){const t=e.elements.map((t=>({value:t.value,color:t.color})));g.addRow({elements:t})}}),"populate"),u={parse:async t=>{const e=await(0,a.q)("matrix",t);i.Rm.debug(e),b(e)}},f=(0,o.K2)(((t,e,r,a)=>{const l=a.db,o=l.getConfig(),s=l.getMatrix(),d=l.getDiagramTitle(),c=a.text.toLowerCase().includes("showindex"),m=(0,n.D)(e);m.attr("viewbox","0 0 1600 1600"),(0,i.a$)(m,1600,1600,o.useMaxWidth),d&&m.append("text").text(d).attr("x",800).attr("y",25).attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","matrixTitle");for(const[t,e]of s.entries())for(const[r,a]of e.elements.entries())w(m,a,t,r,o,c);c&&h(m,s.length,s[0]?.elements.length||0,o)}),"draw"),p=(0,o.K2)((t=>{switch(t){case"blue":return"rgba(0, 0, 255, 0.4)";case"green":return"rgba(0, 255, 0, 0.4)";case"red":return"rgba(255, 0, 0, 0.4)";default:return"none"}}),"getColor"),w=(0,o.K2)(((t,e,r,a,{borderColor:n,borderWidth:l,labelColor:i,labelFontSize:o},s)=>{const d=t.append("g"),c=50*a+50,m=50*r+50,x=p(e.color);d.append("rect").attr("x",c).attr("y",m).attr("width",50).attr("height",50).style("fill",x).attr("stroke","blue").attr("stroke-width",1).attr("class","matrixElement"),d.append("text").attr("x",c+20).attr("y",m+20).attr("fill",i).attr("font-size",o).attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","elementLabel").text(e.value.toString())}),"drawElement"),h=(0,o.K2)(((t,e,r,{labelColor:a,labelFontSize:n})=>{for(let r=0;r<e;r++)t.append("text").attr("x",20).attr("y",50*r+70).attr("fill",a).attr("font-size",n).attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","indexLabel").text(r.toString());for(let l=0;l<r;l++)t.append("text").attr("x",50*l+70).attr("y",50*e+70).attr("fill",a).attr("font-size",n).attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","indexLabel").text(l.toString())}),"drawIndices"),C={parser:u,db:g,renderer:{draw:f},styles:(0,o.K2)(((t={})=>(i.Rm.debug({options:t}),`\n    .element {\n      font-size: ${t.array?.elementFontSize??"10px"};\n      fill: ${t.array?.valueColor??"black"};\n    }\n    .element.index {\n      fill: ${t.array?.indexColor??"black"};\n    }\n    .element {\n      stroke: ${t.array?.elementStrokeColor??"black"};\n      stroke-width: ${t.array?.elementStrokeWidth??"1"};\n      fill: ${t.array?.elementFillColor??"#efefef"};\n    }\n  `)),"styles")}}}]);